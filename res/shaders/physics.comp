#version 430
//#extension GL_ARB_compute_shader : enable
//#extension GL_ARB_shader_storage_buffer_object : enable

const float dt = 1.0/60;
uniform float u_Stiffness = 20;
uniform float u_Damping = 3;

struct particle{
    vec2 pos;
    vec2 vel;
};

layout(std430, binding=0) buffer particles{
   particle part[];
};
layout(std430, binding=1) buffer restPositions{
   vec2 restPos[];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main(){
    uint gid = gl_GlobalInvocationID.x;

    int nbParticles = 2000;
    if(gid < nbParticles){
        vec2 dir = restPos[gid] - part[gid].pos;
        vec2 acc = dir * u_Stiffness - part[gid].vel * u_Damping;
        part[gid].vel += acc * dt;
        part[gid].pos += part[gid].vel * dt;
    }
}