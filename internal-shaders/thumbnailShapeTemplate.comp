//? #version 430
//? vec2 shape(float t, vec2 center, float radius, float rotation);

// Included by the shape
//? uniform int u_NbOfParticles;
//? uniform float u_aspectRatio;
//? // Params
//? uniform int u_count;
//? uniform int u_intLR;
//? uniform int u_intUD;
//? uniform float u_wheel;
//? uniform float u_ctrlWheel;
//? uniform float u_shiftWheel;
//? uniform float u_altWheel;
//? // Random
//? uniform float u_seed;
//? uniform vec2 u_xySeed;
//? float rand(float id, float seed);

layout(std430, binding=4) buffer positionsBuffer {
   vec2 positions[];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main(){
    uint gid = gl_GlobalInvocationID.x;
    if (gid < u_NbOfParticles) {
        positions[gid] = shape(gid / float(u_NbOfParticles), vec2(0.0), 0.95, 0.0);
    }
}