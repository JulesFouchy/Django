uniform int u_NbOfParticles;
uniform float u_aspectRatio;
// Params
uniform int u_count;
uniform int u_intLR;
uniform int u_intUD;
uniform float u_wheel;
uniform float u_ctrlWheel;
uniform float u_shiftWheel;
uniform float u_altWheel;
//Rand
uniform float u_Seed;
uniform float a;
uniform vec2 v;
uniform vec2 xyOff;
uniform float delta;

vec2 shape(float t, vec2 center, float radius) {
    float nbBranches = 5.0;
    float branchId    = floor(t * nbBranches);
    float branchCoord = fract(t * nbBranches);
    float angle = branchId * 6.28 / nbBranches;
    return center + radius * branchCoord * vec2(cos(angle), sin(angle));
}