//? #version 430
//  ||| Include all the available values. They are explained at the bottom of the file.
//  vvv
//? uniform int u_NbOfParticles; uniform float u_aspectRatio; uniform int u_count; uniform int u_LR; uniform int u_UD; uniform int u_wheel; uniform int u_ctrlWheel; uniform int u_shiftWheel; uniform int u_altWheel; uniform float u_seed; uniform vec2 u_xySeed; float rand(float seedX, float seedY); vec2 shape(float t, vec2 center, float radius, float rotation);


const vec2 dirUp = vec2(0.0, 1.0);
const vec2 dirLeft = vec2(-0.866025403784439, -0.5);
const vec2 dirRight = vec2(0.866025403784439, -0.5);

vec2 getPosition(uint particleID) {
	float t = particleID / float(u_NbOfParticles);
	vec2 center = vec2(0.0);
	float radius = 1.0;

	for (int _ = 0; _ < max(u_UD + 2, 0); _++) {
		radius /= 2.0;
		int id = int(floor(t * 3.0));
		t =          fract(t * 3.0);
		vec2 dir;
		switch (id) {
			case 0:
				dir = dirUp;
				break;
			case 1:
				dir = dirLeft;
				break;
			case 2:
				dir = dirRight;
				break;
		}
		center += dir * radius;
	}

	return shape(t, center, radius, u_wheel * 3.141592653 / 6.0);
}