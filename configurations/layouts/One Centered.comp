//? #version 430
//? uniform int u_NbOfParticles; uniform float u_aspectRatio; uniform int u_count; uniform int u_LR; uniform int u_UD; uniform int u_wheel; uniform int u_ctrlWheel; uniform int u_shiftWheel; uniform int u_altWheel; uniform float u_seed; uniform vec2 u_xySeed; float rand(float seedX, float seedY);

//? vec2 shape(float t, vec2 center, float radius, float rotation);

vec2 getPosition(uint particleID) {
	return shape(particleID / float(u_NbOfParticles), vec2(0.0), u_shiftWheel*0.1 + 0.9, u_wheel * 3.141592653 / 24.0);
}